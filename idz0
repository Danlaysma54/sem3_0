# 0 "/home/danlaysma/CLionProjects/sem3_0/idz0.cpp"
# 1 "/home/danlaysma/CLionProjects/sem3_0//"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 0 "<command-line>" 2
# 1 "/home/danlaysma/CLionProjects/sem3_0/idz0.cpp"
# 1 "/home/danlaysma/CLionProjects/sem3_0/box.h" 1
struct box
{
    int length;
    int width;
    int height;
    double weight;
    int value;
    box(int length_input,int width_input,int height_input,double weight_input,int value_input){
        length=length_input;
        width=width_input;
        height=height_input;
        weight = weight_input;
        value =value_input;
    }
};
# 2 "/home/danlaysma/CLionProjects/sem3_0/idz0.cpp" 2
int SumValue(box boxes[],int size){
int value=0;
for(int i=0;i<size;i++){
    value+=boxes[i].value;
}
return value;
}
bool NotBiggerThanSize(box boxes[],int size,int max_value){
for(int i=0;i<size;i++){
    if (boxes[i]>max_value)
    return false;
}
return true;
}
int MaxWeight(box boxes[],int size,int maxV){
    int max_weight_box=0;
    for(int i=0;i<size;i++){
    if(boxes[i].height*boxes[i].length*boxes[i].width<maxV){
        if(boxes[i].weight>max_weight_box){
            max_weight_box=boxes[i].weight;
        }
    }
    return max_weight_box;
}
}
bool PuttingIt(box boxes[],int size){
    struct Data
    {
       box box;
        int volume;
    };
    Data tmp;
    Data data[size];
    for (int i=0;i<size;i++){
        data[i].box=boxes[i];
        data[i].volume=boxes[i].height*boxes[i].length*boxes[i].width;
    }
    for (int i=1;i<size;i++){
        for (int j=0;j<i;j++) {
            if(data[j].volume>data[i].volume)
            tmp=data[i];
            data[i]=data[j];
            data[j]=tmp;
        }
    }
    for(int i=0;i<size;i++){
        if(data[i].box.height<data[i+1].box.height && data[i].box.length<data[i+1].box.length && data[i].box.weight<data[i+1].box.weight)
        return false;
    }
    return true;
}
